Running "mochaTest:spec" (mochaTest) task


  build tests
    commonjs
      ✓ should exist
      ✓ should return the lib object with the parse, loader and extend functions in the exports (93ms)

  common
    typeOf
      ✓ should be a function
      ✓ should return "string" when the value is a string
      ✓ should return "number" when the value is a number
      ✓ should return "function" when the value is a function
      ✓ should return "boolean" when the value is a boolean
      ✓ should return "date" when the value is a Date
      ✓ should return "regexp" when the value is a regular expression
      ✓ should return "array" when the value is an array
      ✓ should return "undefined" when the value is undefined
      ✓ should return "null" when the value is null
      ✓ should return "object" when the value is an object
    clone
      ✓ should clone regular expressions
      ✓ should return the same value when a value type is passed
      ✓ should handle an object without a prototype
      ✓ should deep clone objects
      ✓ should handle circular references
    isObject
      ✓ should return false if null is supplied
      ✓ should return true if a non null object is supplied
      ✓ should return false if a non object is supplied
    startsWith
      ✓ should return true if the supplied string starts with the supplied value
      ✓ should return false if the supplied string does not start with the supplied value
      ✓ should return false if the any of the supplied values is not a string

  levels
    checks
      ✓ should return the supplied config value if it is not an object or array
      ✓ should return the config if the supplied levels argument is not an array
    extend
Processing level 0
Processing values
Processing level 1
Processing values
Processing level 2
Processing values
Processing level 3
Processing values
Processing level 4
Processing values
      ✓ should replace the object if a level value type is received
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
      ✓ should not modify the originally supplied object
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
undefined
Processing values
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "hello"
undefined
Processing values
Set "hello" to "world" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
{ foo: 'bar' }
Value changed in set "hello" to "world"
De-register the old object (in case we have array or object)
Setting on changes "hello" to "world"
Emitting change event "hello"
Returning "Symbol(id)"
Set succesfully
Returning "foo" from CHANGES
Returning "hello" from CHANGES
      ✓ should add properties to the underlying object
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test"
undefined
Processing values
Set "test" to "undefined" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
undefined
Processing values
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "hello"
undefined
Processing values
Set "hello" to "world" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
{ foo: 'bar' }
Value changed in set "hello" to "world"
De-register the old object (in case we have array or object)
Setting on changes "hello" to "world"
Emitting change event "hello"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test"
undefined
Processing values
Set "test" to "undefined" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  'hello',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "hello"
{ value: 'world',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "hello"
{ value: 'world',
  writable: true,
  enumerable: true,
  configurable: true }
{ foo: 'bar', hello: 'world' }
Set succesfully
Returning "foo" from CHANGES
Returning "hello" from CHANGES
Returing ownKeys:
[ 'foo',
  'hello',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "hello"
{ value: 'world',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "test"
      ✓ delete properties extended if they are undefined
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "section"
undefined
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value1"
undefined
Processing values
Set "value1" to "a" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "value1" to "a"
De-register the old object (in case we have array or object)
Setting on changes "value1" to "a"
Emitting change event "value1"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value2"
undefined
Processing values
Set "value2" to "d" on
Returning "inspect"
Returing ownKeys:
[ 'value1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
{ value1: 'a' }
Value changed in set "value2" to "d"
De-register the old object (in case we have array or object)
Setting on changes "value2" to "d"
Emitting change event "value2"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "subsection"
undefined
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value3"
undefined
Processing values
Set "value3" to "c" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "value3" to "c"
De-register the old object (in case we have array or object)
Setting on changes "value3" to "c"
Emitting change event "value3"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value4"
undefined
Processing values
Set "value4" to "e" on
Returning "inspect"
Returing ownKeys:
[ 'value3',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
{ value3: 'c' }
Value changed in set "value4" to "e"
De-register the old object (in case we have array or object)
Setting on changes "value4" to "e"
Emitting change event "value4"
Returning "Symbol(id)"
Set succesfully
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "subsection" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'value1',
  'value2',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
{ value1: 'a', value2: 'd' }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "subsection" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "value3" from CHANGES
Returning "value4" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "subsection" to "[object Object]"
Emitting change event "subsection"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "section" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "section" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning "value1" from CHANGES
Returning "value2" from CHANGES
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "section" to "[object Object]"
Emitting change event "section"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "section2"
undefined
Processing values
Set "section2" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'section',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ section: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } } }
Value changed in set "section2" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Starting monitoring of config object
Returning symbol prop... Symbol(events)
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Setting on changes "section2" to "[object Object]"
Emitting change event "section2"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test"
undefined
Processing values
Set "test" to "10" on
Returning "inspect"
Returing ownKeys:
[ 'section',
  'section2',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "section2"
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "section2"
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ section: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  section2: {} }
Value changed in set "test" to "10"
De-register the old object (in case we have array or object)
Setting on changes "test" to "10"
Emitting change event "test"
Returning "Symbol(id)"
Set succesfully
Returning "toJSON"
Returing ownKeys:
[ 'section',
  'section2',
  'test',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "section"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "section2"
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "toJSON"
Returning "toJSON"
Returning property descriptor for "toJSON"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "toJSON"
Returning "toJSON"
Returning property descriptor for "toJSON"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section2" from CHANGES
Returning "toJSON"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: false,
  configurable: true }
Returning "test" from CHANGES
{"section":{"value1":"a","value2":"d","subsection":{"value3":"c","value4":"e"}},"section2":{},"test":10}
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "section2" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "value1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "value2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "subsection" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "value4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "section2" from CHANGES
Returning "foo"
Returning "test" from CHANGES
Returning "section" from CHANGES
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value1',
  'value2',
  'subsection',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { value1: 'a',
     value2: 'd',
     subsection: { value3: 'c', value4: 'e' } },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value1"
{ value: 'a',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value2"
{ value: 'd',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "subsection"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'value3',
  'value4',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { value3: 'c', value4: 'e' },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value3"
{ value: 'c',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "value4"
{ value: 'e',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { value3: 'c', value4: 'e' },
  writable: true,
  enumerable: true,
  configurable: true }
      ✓ should deep extend the properties (157ms)
Processing level 0
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "remove"
remove
Returning length of 5
Returning "0" from CHANGES
Returning length of 5
Returning "1" from CHANGES
found at 1
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Returning "splice" from CHANGES
Returning length of 5
del 1
del 2
del 3
del 4
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
[  ]
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Returning length of 4
Returning "0" from CHANGES
Returning "1" from CHANGES
      1) should extend an array
      array commands
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "$"
undefined
Processing values
Set "$" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "$" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Starting monitoring of config object
Returning symbol prop... Symbol(events)
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Setting on changes "$" to "[object Object]"
Emitting change event "$"
Returning "Symbol(id)"
Set succesfully
Returning length of 1
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "1" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "1" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "$" from CHANGES
Returning symbol prop... Symbol(data)
Returning "$" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "1" to "[object Object]"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
[ 1, { '$': {} } ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 2
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Set "vals" to "1,[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 2
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Value changed in set "vals" to "1,[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 2
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning "1" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 2
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "vals" to "1,[object Object]"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: [ 1, { '$': {} } ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 2
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 2
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 2
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: [ 1, { '$': {} } ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 2
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '$',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Object] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "$"
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: {},
  writable: true,
  enumerable: true,
  configurable: true }
Returning "inspect"
Returing ownKeys:
[ 'action',
  'find',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "action"
{ value: 'remove',
  writable: true,
  enumerable: false,
  configurable: true }
Returning property descriptor for "find"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: true }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{ value: { '$': {} },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
        ✓ should only apply commands if the entire array is commands (51ms)
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "remove"
remove
Returning length of 5
Returning "0" from CHANGES
Returning length of 5
Returning "1" from CHANGES
found at 1
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Returning "splice" from CHANGES
Returning length of 5
del 1
del 2
del 3
del 4
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
[  ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 4
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Set "vals" to "1,2,3,4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 4
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Value changed in set "vals" to "1,2,3,4"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 4
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Setting on changes "vals" to "1,2,3,4"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3, 4 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3, 4 ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
        2) should allow elements to be searched by reference
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "1"
De-register the old object (in case we have array or object)
Setting on changes "id" to "1"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 0
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "0" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "0" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "0" to "[object Object]"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "2"
De-register the old object (in case we have array or object)
Setting on changes "id" to "2"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 1
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "1" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "1" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "1" to "[object Object]"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "3" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "3"
De-register the old object (in case we have array or object)
Setting on changes "id" to "3"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 2
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "2" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "2" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "2" to "[object Object]"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "4"
De-register the old object (in case we have array or object)
Setting on changes "id" to "4"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 3
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "3" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "3" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "3" to "[object Object]"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "5" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "5"
De-register the old object (in case we have array or object)
Setting on changes "id" to "5"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 4
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "4" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "4" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "4" to "[object Object]"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 } ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Object extend
Returning symbol prop... Symbol(context)
Returning symbol prop... Symbol(context)
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
        3) should allow elements to be searched by property values
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "add"
Returning "push" from CHANGES
Returning length of 5
Set "5" to "6" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "5" to "6"
De-register the old object (in case we have array or object)
Setting on changes "5" to "6"
Emitting change event "5"
Returning "Symbol(id)"
Set succesfully
Set "length" to "6" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 6
Returning "Symbol(Symbol.toStringTag)"
Returning length of 6
Returning length of 6
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5, 6 ]
Value changed in set "length" to "6"
De-register the old object (in case we have array or object)
Setting on changes "length" to "6"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 6
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Returning "5" from CHANGES
Set "vals" to "1,2,3,4,5,6" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 6
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Returning "5" from CHANGES
Value changed in set "vals" to "1,2,3,4,5,6"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 6
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Returning "5" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 6
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "5" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Setting on changes "vals" to "1,2,3,4,5,6"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  '5',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3, 4, 5, 6 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 6
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 6
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 6
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3, 4, 5, 6 ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 6
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 6,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "5" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "5"
{ value: 6, writable: true, enumerable: true, configurable: true }
        ✓ should allow elements to be added
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "remove"
remove
Returning length of 5
Returning "0" from CHANGES
Returning length of 5
Returning "1" from CHANGES
found at 1
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Returning "splice" from CHANGES
Returning length of 5
del 1
del 2
del 3
del 4
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
[  ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 4
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Set "vals" to "1,2,3,4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 4
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Value changed in set "vals" to "1,2,3,4"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 4
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Setting on changes "vals" to "1,2,3,4"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3, 4 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3, 4 ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 4
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
        4) should allow elements to be removed
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "update"
Returning length of 5
Returning "0" from CHANGES
Returning length of 5
Returning "1" from CHANGES
Set "1" to "10" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "10"
De-register the old object (in case we have array or object)
Setting on changes "1" to "10"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 5
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Set "vals" to "1,10,3,4,5" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 5
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Value changed in set "vals" to "1,10,3,4,5"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 5
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Setting on changes "vals" to "1,10,3,4,5"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 10, 3, 4, 5 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 10, 3, 4, 5 ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
        ✓ should allow elements to be replaced
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 3
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Returning length of 4
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "1" from CHANGES
Processing values
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "2" from CHANGES
Processing values
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "3" from CHANGES
Processing values
Set "3" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "3" to "4"
De-register the old object (in case we have array or object)
Setting on changes "3" to "4"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
Returning "4" from CHANGES
Processing values
Set "4" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Value changed in set "4" to "5"
De-register the old object (in case we have array or object)
Setting on changes "4" to "5"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Returning length of 5
applyCommand "clear"
Set "length" to "0" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3, 4, 5 ]
Set succesfully
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 5
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Set "vals" to "1,2,3,4,5" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 5
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Value changed in set "vals" to "1,2,3,4,5"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 5
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning "3" from CHANGES
Returning "4" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "3" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "4" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Setting on changes "vals" to "1,2,3,4,5"
Emitting change event "vals"
Returning "Symbol(id)"
Set succesfully
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3, 4, 5 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3, 4, 5 ],
  writable: true,
  enumerable: true,
  configurable: true }
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning "vals" from CHANGES
Returning symbol prop... Symbol(changes)
Returning length of 5
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
        5) should allow elements to be cleared
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "1"
De-register the old object (in case we have array or object)
Setting on changes "id" to "1"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 0
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "0" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "0" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "0" to "[object Object]"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "2"
De-register the old object (in case we have array or object)
Setting on changes "id" to "2"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 1
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "1" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "1" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "1" to "[object Object]"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "3" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "3"
De-register the old object (in case we have array or object)
Setting on changes "id" to "3"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 2
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "2" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "2" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "2" to "[object Object]"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "4"
De-register the old object (in case we have array or object)
Setting on changes "id" to "4"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 3
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "3" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "3" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "3" to "[object Object]"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "5" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "5"
De-register the old object (in case we have array or object)
Setting on changes "id" to "5"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 4
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "4" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "4" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "4" to "[object Object]"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 } ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Object extend
Returning symbol prop... Symbol(context)
Returning symbol prop... Symbol(context)
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
        6) should allow elements to be extended
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "protocol" to "https" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "protocol" to "https"
De-register the old object (in case we have array or object)
Setting on changes "protocol" to "https"
Emitting change event "protocol"
Returning "Symbol(id)"
Emitting ID change event "protocol" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "protocol"
{ value: 'https',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "domain" to "example.com" on
Returning "inspect"
Returing ownKeys:
[ 'protocol',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ protocol: undefined }
Value changed in set "domain" to "example.com"
De-register the old object (in case we have array or object)
Setting on changes "domain" to "example.com"
Emitting change event "domain"
Returning "Symbol(id)"
Emitting ID change event "domain" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "domain"
{ value: 'example.com',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "port" to "80" on
Returning "inspect"
Returing ownKeys:
[ 'protocol',
  'domain',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ protocol: undefined, domain: undefined }
Value changed in set "port" to "80"
De-register the old object (in case we have array or object)
Setting on changes "port" to "80"
Emitting change event "port"
Returning "Symbol(id)"
Emitting ID change event "port" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "port"
{ value: 80,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "url"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Set "env" to "production" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "env" to "production"
De-register the old object (in case we have array or object)
Setting on changes "env" to "production"
Emitting change event "env"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "env"
{ value: 'production',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "server" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'env',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "env"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "env"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ env: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "server" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'protocol',
  'domain',
  'port',
  'url',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "protocol"
Returning "domain"
Returning "port"
Returning "url"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "server" to "[object Object]"
Emitting change event "server"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "server"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'protocol',
  'domain',
  'port',
  'url',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'protocol',
  'domain',
  'port',
  'url',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'protocol',
  'domain',
  'port',
  'url',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'server',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "protocol"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "port"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "url"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'server',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { protocol: undefined,
     domain: undefined,
     port: undefined,
     url: undefined,
     id: 'server' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "domain"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(id)"
Set "env" to "development" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "env" to "development"
De-register the old object (in case we have array or object)
Setting on changes "env" to "development"
Emitting change event "env"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "env"
{ value: 'development',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "server" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'env',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "env"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "env"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ env: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "server" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'domain',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "domain"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "server" to "[object Object]"
Emitting change event "server"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "server"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'domain',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'domain',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'domain',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "domain"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { domain: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Processing level 0
Processing values
Object extend
Returning symbol prop... Symbol(context)
Returning symbol prop... Symbol(context)
        7) should set the prototypes so that base properties are available
    options
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "1"
De-register the old object (in case we have array or object)
Setting on changes "id" to "1"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 0
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "0" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
      8) should make all properties read only when "readOnly" is truthy
Processing level 0
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "vals"
undefined
Processing values
Array extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "1"
De-register the old object (in case we have array or object)
Setting on changes "id" to "1"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 0
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "0" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "0" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "0" to "[object Object]"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "2"
De-register the old object (in case we have array or object)
Setting on changes "id" to "2"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 1
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "1" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ { id: 1 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "1" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "1" to "[object Object]"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "3" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "3"
De-register the old object (in case we have array or object)
Setting on changes "id" to "3"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 2
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "2" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "2" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "2" to "[object Object]"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "4"
De-register the old object (in case we have array or object)
Setting on changes "id" to "4"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 3
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "3" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "3" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "3" to "[object Object]"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Processing values
Object extend
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Processing values
Set "id" to "5" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "id" to "5"
De-register the old object (in case we have array or object)
Setting on changes "id" to "5"
Emitting change event "id"
Returning "Symbol(id)"
Set succesfully
Returning length of 4
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "4" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "4" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning "id" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "4" to "[object Object]"
Emitting change event "4"
Returning "Symbol(id)"
Set succesfully
Set "length" to "5" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  '4',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 5,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 5
Returning "Symbol(Symbol.toStringTag)"
Returning length of 5
Returning length of 5
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
{ value: { id: 1 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 1 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
{ value: { id: 2 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 2 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: { id: 3 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 3 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
{ value: { id: 4 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 4 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 4, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "4"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
{ value: { id: 5 },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: { id: 5 },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "id"
{ value: 5, writable: true, enumerable: true, configurable: true }
[ { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 } ]
Value changed in set "length" to "5"
De-register the old object (in case we have array or object)
Setting on changes "length" to "5"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
applyCommands
Returning length of 5
Returning "0" from CHANGES
Processing values
Object extend
Returning symbol prop... Symbol(context)
Returning symbol prop... Symbol(context)
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
      9) should make all properties read only when "protectStructure" is truthy

  loader
    checks
      ✓ should ensure the first argument is a string
      ✓ should ensure loader is a function
    loading
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "foo" to "hello" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "hello"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "hello"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'hello',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "bar"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "baz" to "world" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  'bar',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined, bar: undefined }
Value changed in set "baz" to "world"
De-register the old object (in case we have array or object)
Setting on changes "baz" to "world"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
{ value: 'world',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "boo"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "boo"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "then"
Returning "bar"
      10) should assign any non string value directly to the config
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "foo" to "hello" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "hello"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "hello"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'hello',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "bar"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "baz" to "world" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  'bar',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bar"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined, bar: undefined }
Value changed in set "baz" to "world"
De-register the old object (in case we have array or object)
Setting on changes "baz" to "world"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
{ value: 'world',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "boo"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "boo"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "undefined"
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "undefined"
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "then"
Returning "then"
Returning "then"
Returning "bar"
Returning "boo"
Returning "bar"
Returning "boo"
      11) should use the parser to parse any string returned by the loader
    options
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
      ✓ should pass all values defined in options.environment to the loaded configs
Returning "undefined"
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "then"
Returning "then"
Returning "sub"
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: false }
Defining properry
      ✓ should make all properties non-configurable when protectStructure is truthy

  configuration parser
    checks
      ✓ should ensure the supplied data is a string
      ✓ should return null when the supplied str is empty
      ✓ should ensure the supplied config file defines an object or array at its root
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "prop"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "prop"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
      12) should not allow calls to functions which are illegal
Starting monitoring of config object
Returning symbol prop... Symbol(context)
      ✓ should prevent illegal expression types from being used
    root
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "some" from CHANGES
Returning length of 3
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Set "baz" to "1,2,3" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Value changed in set "baz" to "1,2,3"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 3
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Setting on changes "baz" to "1,2,3"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3 ],
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(id)"
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "foo"
Returning "baz"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { foo: undefined, baz: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(Symbol.toStringTag)"
      ✓ should allow an object to be defined at the root, and should return an object when parsed
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "item" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "item" to "1"
De-register the old object (in case we have array or object)
Setting on changes "item" to "1"
Emitting change event "item"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "item"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "push" from CHANGES
Returning length of 0
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "0" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "0" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "item"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "0" to "[object Object]"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined } ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "item" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "item" to "2"
De-register the old object (in case we have array or object)
Setting on changes "item" to "2"
Emitting change event "item"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "item"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "push" from CHANGES
Returning length of 1
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "1" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "1" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "item"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "1" to "[object Object]"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined }, { item: undefined } ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "item" to "3" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "item" to "3"
De-register the old object (in case we have array or object)
Setting on changes "item" to "3"
Emitting change event "item"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "item"
{ value: 3, writable: true, enumerable: true, configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "push" from CHANGES
Returning length of 2
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "2" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined }, { item: undefined } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "2" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "item"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "2" to "[object Object]"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined }, { item: undefined }, { item: undefined } ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "item" to "4" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "item" to "4"
De-register the old object (in case we have array or object)
Setting on changes "item" to "4"
Emitting change event "item"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "item"
{ value: 4, writable: true, enumerable: true, configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "push" from CHANGES
Returning length of 3
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "3" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined }, { item: undefined }, { item: undefined } ]
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "3" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "item"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "3" to "[object Object]"
Emitting change event "3"
Returning "Symbol(id)"
Set succesfully
Set "length" to "4" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  '3',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "length"
{ value: 4,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
Returning length of 4
Returning length of 4
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "0"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "1"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "2"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "3"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { item: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'item',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "item"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
[ { item: undefined },
  { item: undefined },
  { item: undefined },
  { item: undefined } ]
Value changed in set "length" to "4"
De-register the old object (in case we have array or object)
Setting on changes "length" to "4"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "some" from CHANGES
Returning length of 4
Returning "Symbol(Symbol.toStringTag)"
      ✓ should allow an array to be defined at the root, and should return an array when parsed (95ms)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "some" from CHANGES
Returning length of 3
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Set "baz" to "1,2,3" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Value changed in set "baz" to "1,2,3"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 3
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Setting on changes "baz" to "1,2,3"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3 ],
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(id)"
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "foo"
Returning "baz"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { foo: undefined, baz: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returing ownKeys:
[ 'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
      13) should not create the context value symbol when is is not defined on the parse function
    literals
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "str" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "str" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "str" to "foo bar"
Emitting change event "str"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "str"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "num" to "10" on
Returning "inspect"
Returing ownKeys:
[ 'str',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ str: undefined }
Value changed in set "num" to "10"
De-register the old object (in case we have array or object)
Setting on changes "num" to "10"
Emitting change event "num"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "num"
{ value: 10,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "bool" to "true" on
Returning "inspect"
Returing ownKeys:
[ 'str',
  'num',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ str: undefined, num: undefined }
Value changed in set "bool" to "true"
De-register the old object (in case we have array or object)
Setting on changes "bool" to "true"
Emitting change event "bool"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "bool"
{ value: true,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "nul" to "null" on
Returning "inspect"
Returing ownKeys:
[ 'str',
  'num',
  'bool',
  'und',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bool"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bool"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ str: undefined,
  num: undefined,
  bool: undefined,
  und: undefined }
Value changed in set "nul" to "null"
De-register the old object (in case we have array or object)
Setting on changes "nul" to "null"
Emitting change event "nul"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "nul"
{ value: null,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "rex" to "/abc/gi" on
Returning "inspect"
Returing ownKeys:
[ 'str',
  'num',
  'bool',
  'und',
  'nul',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bool"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "nul"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "str"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "num"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "bool"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "nul"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ str: undefined,
  num: undefined,
  bool: undefined,
  und: undefined,
  nul: undefined }
Value changed in set "rex" to "/abc/gi"
De-register the old object (in case we have array or object)
Processing object value
Starting monitoring of config object
Returning symbol prop... Symbol(events)
      14) "before each" hook for "should return a string when a string property is defined"
    interpolation
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "type" to "cruel" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "type" to "cruel"
De-register the old object (in case we have array or object)
Setting on changes "type" to "cruel"
Emitting change event "type"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "type"
{ value: 'cruel',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "value"
      15) should return the value with the variables interpolated into the string
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "type" to "cruel" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "type" to "cruel"
De-register the old object (in case we have array or object)
Setting on changes "type" to "cruel"
Emitting change event "type"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "type"
{ value: 'cruel',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "value"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "value"
      16) should return a new value if any of the variables have changed
    objects
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "some" from CHANGES
Returning length of 3
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Set "baz" to "1,2,3" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Value changed in set "baz" to "1,2,3"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 3
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Setting on changes "baz" to "1,2,3"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3 ],
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(id)"
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "foo"
Returning "baz"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { foo: undefined, baz: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning "sub"
      17) should parse sub objects in the configuration
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "push" from CHANGES
Returning length of 0
Set "0" to "1" on
Returning "inspect"
Returing ownKeys:
[ 'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "length"
{ value: 0,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning length of 0
Returning "Symbol(Symbol.toStringTag)"
[]
Value changed in set "0" to "1"
De-register the old object (in case we have array or object)
Setting on changes "0" to "1"
Emitting change event "0"
Returning "Symbol(id)"
Set succesfully
Set "length" to "1" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "length" to "1"
De-register the old object (in case we have array or object)
Setting on changes "length" to "1"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 1
Set "1" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 1,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 1
Returning "Symbol(Symbol.toStringTag)"
Returning length of 1
Returning length of 1
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
[ 1 ]
Value changed in set "1" to "2"
De-register the old object (in case we have array or object)
Setting on changes "1" to "2"
Emitting change event "1"
Returning "Symbol(id)"
Set succesfully
Set "length" to "2" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "length" to "2"
De-register the old object (in case we have array or object)
Setting on changes "length" to "2"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "push" from CHANGES
Returning length of 2
Set "2" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 2,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 2
Returning "Symbol(Symbol.toStringTag)"
Returning length of 2
Returning length of 2
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
[ 1, 2 ]
Value changed in set "2" to "3"
De-register the old object (in case we have array or object)
Setting on changes "2" to "3"
Emitting change event "2"
Returning "Symbol(id)"
Set succesfully
Set "length" to "3" on
Returning "inspect"
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning length of 3
Returning "Symbol(Symbol.toStringTag)"
Returning length of 3
Returning length of 3
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
[ 1, 2, 3 ]
Value changed in set "length" to "3"
De-register the old object (in case we have array or object)
Setting on changes "length" to "3"
Emitting change event "length"
Returning "Symbol(id)"
Set succesfully
Returning "some" from CHANGES
Returning length of 3
Returning "Symbol(id)"
Set "foo" to "bar" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "foo" to "bar"
De-register the old object (in case we have array or object)
Setting on changes "foo" to "bar"
Emitting change event "foo"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "foo"
{ value: 'bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Set "baz" to "1,2,3" on
Returning "inspect"
Returing ownKeys:
[ 'foo',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ foo: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "join" from CHANGES
Returning length of 3
Returning "0" from CHANGES
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Value changed in set "baz" to "1,2,3"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returning length of 3
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning "0" from CHANGES
Returning "1" from CHANGES
Returning "2" from CHANGES
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning "join" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "join"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "0" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "1" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning "2" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Setting on changes "baz" to "1,2,3"
Emitting change event "baz"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baz"
Returning symbol prop... Symbol(changes)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ '0',
  '1',
  '2',
  'length',
  Symbol(context),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: [ 1, 2, 3 ],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning length of 3
Returning symbol prop... Symbol(changes)
Returning property descriptor for "length"
{ value: 3,
  writable: true,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "0"
{ value: 1, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "1"
{ value: 2, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning symbol prop... Symbol(changes)
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
Returning property descriptor for "2"
{ value: 3, writable: true, enumerable: true, configurable: true }
{ value: [ 1, 2, 3 ],
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(id)"
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "foo"
Returning "baz"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returing ownKeys:
[ 'foo',
  'baz',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "foo"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baz"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ value: { foo: undefined, baz: undefined },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning "sub"
      18) should parse sub arrays in the configuration
    expressions
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "exp1"
      19) should return the value of the expression
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "sub"
      20) should allow expressions to reference object by their id
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "exp6"
      21) should allow configuration values on the current object to be referenced by name
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "exp7"
      22) should allow configuration values on the current object to be through this
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "exp8"
      23) should use values from options.environment to the parse function in expressions
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "baseTest" from CHANGES
      ✓ should return the property with the same name from the prototype when "base" is specified
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
Emitting event
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Starting monitoring of config object
Returning symbol prop... Symbol(context)
      ✓ should not allow new expressions
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
Emitting event
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Starting monitoring of config object
Returning symbol prop... Symbol(context)
      ✓ should not allow new expressions
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
Emitting event
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Starting monitoring of config object
Returning symbol prop... Symbol(context)
      ✓ should not allow assignment expressions
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
Emitting event
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "constant"
      24) should parse constant expressions to normal values
    errors
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Starting monitoring of config object
Returning symbol prop... Symbol(context)
defineProperty
deregister ID Symbol(id)
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "Symbol(id)"
undefined
Adding value
Defining properry
Returning "Symbol(id)"
Returning "Symbol(id)"
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val2" to "2" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val2" to "2"
De-register the old object (in case we have array or object)
Setting on changes "val2" to "2"
Emitting change event "val2"
Returning "Symbol(id)"
Emitting ID change event "val2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val2"
{ value: 2, writable: true, enumerable: true, configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val2: undefined,
  und: undefined,
  exp4: undefined,
  exp5: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val3"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val3',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub2',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub2',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: { val3: undefined, id: 'sub2' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "Symbol(id)"
Returning "Symbol(id)"
Set "val1" to "1" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val1" to "1"
De-register the old object (in case we have array or object)
Setting on changes "val1" to "1"
Emitting change event "val1"
Returning "Symbol(id)"
Emitting ID change event "val1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val1"
{ value: 1, writable: true, enumerable: true, configurable: true }
Defining properry
Set "exp1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined }
Value changed in set "exp1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "exp1" to "20"
Emitting change event "exp1"
Returning "Symbol(id)"
Emitting ID change event "exp1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "exp2" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined, exp1: undefined }
Value changed in set "exp2" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "exp2" to "foo bar"
Emitting change event "exp2"
Returning "Symbol(id)"
Emitting ID change event "exp2" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp2"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "name with spaces" to "foo bar" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined }
Value changed in set "name with spaces" to "foo bar"
De-register the old object (in case we have array or object)
Setting on changes "name with spaces" to "foo bar"
Emitting change event "name with spaces"
Returning "Symbol(id)"
Emitting ID change event "name with spaces" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "name with spaces"
{ value: 'foo bar',
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Set "sub" to "[object Object]" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined }
Returning "Symbol(Symbol.toPrimitive)"
Returning "toString" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Value changed in set "sub" to "[object Object]"
De-register the old object (in case we have array or object)
Processing object value
Returning symbol prop... Symbol(data)
Starting monitoring of config object
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning "val2"
Returning "und"
Returning "exp4"
Returning "exp5"
Returning "sub"
Returning "id"
Returning symbol prop... Symbol(events)
Returning symbol prop... Symbol(events)
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toPrimitive)"
Returning "Symbol(Symbol.toPrimitive)"
Returning property descriptor for "Symbol(Symbol.toPrimitive)"
undefined
Returning symbol prop... Symbol(changes)
Returning "toString" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "toString"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Setting on changes "sub" to "[object Object]"
Emitting change event "sub"
Returning "Symbol(id)"
Emitting ID change event "sub" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "sub"
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "inspect"
Returning "inspect"
Returning property descriptor for "inspect"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returing ownKeys:
[ 'val2',
  'und',
  'exp4',
  'exp5',
  'sub',
  'id',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "Symbol(context)"
{ value: 
   { source: [Function],
     name: [Function],
     environment: [Function],
     locals: [Function],
     hasValue: [Function: hasValue],
     value: [Function: value],
     localValue: [Function: localValue],
     register: [Function: register],
     deregister: [Function: deregister],
     update: [Function: update] },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: true,
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(data)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(changes)"
{ value: {},
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(events)"
{ value: 
   EventEmitter {
     domain: null,
     _events: { change: [Function: onChildChange] },
     _eventsCount: 1,
     _maxListeners: undefined },
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(reset)"
{ value: [Function: reset],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(commit)"
{ value: [Function: commit],
  writable: false,
  enumerable: false,
  configurable: false }
Returning property descriptor for "Symbol(id)"
{ value: 'sub1',
  writable: true,
  enumerable: false,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning "valueOf" from CHANGES
Returning symbol prop... Symbol(changes)
Returning property descriptor for "valueOf"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning property descriptor for "constructor"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning "Symbol(Symbol.toStringTag)"
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "Symbol(Symbol.toStringTag)"
undefined
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "val2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "und"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp4"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp5"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning symbol prop... Symbol(changes)
Returning symbol prop... Symbol(data)
Returning symbol prop... Symbol(data)
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
Returning property descriptor for "id"
{ value: 'sub1',
  writable: true,
  enumerable: true,
  configurable: true }
{ value: 
   { val2: undefined,
     und: undefined,
     exp4: undefined,
     exp5: undefined,
     sub: undefined,
     id: 'sub1' },
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Set "test1" to "20" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined }
Value changed in set "test1" to "20"
De-register the old object (in case we have array or object)
Setting on changes "test1" to "20"
Emitting change event "test1"
Returning "Symbol(id)"
Emitting ID change event "test1" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test1"
{ value: 20,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
undefined
Defining properry
Emitting event
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Set "constant" to "2500" on
Returning "inspect"
Returing ownKeys:
[ 'val1',
  'exp1',
  'exp2',
  'exp3',
  'exp6',
  'name with spaces',
  'exp7',
  'exp8',
  'sub',
  'test1',
  'test2',
  'test3',
  'baseTest',
  Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit),
  Symbol(id) ]
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning "valueOf" from CHANGES
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "val1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp6"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "name with spaces"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp7"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "exp8"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "sub"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test1"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test2"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "test3"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
Returning property descriptor for "baseTest"
{ value: undefined,
  writable: false,
  enumerable: true,
  configurable: true }
{ val1: undefined,
  exp1: undefined,
  exp2: undefined,
  exp3: undefined,
  exp6: undefined,
  'name with spaces': undefined,
  exp7: undefined,
  exp8: undefined,
  sub: undefined,
  test1: undefined,
  test2: undefined,
  test3: undefined,
  baseTest: undefined }
Value changed in set "constant" to "2500"
De-register the old object (in case we have array or object)
Setting on changes "constant" to "2500"
Emitting change event "constant"
Returning "Symbol(id)"
Emitting ID change event "constant" on root
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "constant"
{ value: 2500,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "id"
undefined
Adding value
Defining properry
Emitting event
Returning "exp8"
      25) should report the line and column of an error when one occurs
Starting monitoring of config object
Returning symbol prop... Symbol(context)
Returning "Symbol(id)"
Set "val" to "100" on
Returning "inspect"
Returing ownKeys:
[ Symbol(context),
  Symbol(data),
  Symbol(data),
  Symbol(changes),
  Symbol(events),
  Symbol(reset),
  Symbol(commit) ]
Returning "valueOf" from CHANGES
Returning "Symbol(Symbol.toStringTag)"
Returning property descriptor for "constructor"
undefined
Returning "Symbol(Symbol.toStringTag)"
{}
Value changed in set "val" to "100"
De-register the old object (in case we have array or object)
Setting on changes "val" to "100"
Emitting change event "val"
Returning "Symbol(id)"
Set succesfully
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "val"
{ value: 100,
  writable: true,
  enumerable: true,
  configurable: true }
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "invalid"
undefined
Defining properry
defineProperty
deregister object
Returning "hasOwnProperty" from CHANGES
Returning property descriptor for "invalid"
{ value: undefined,
  writable: false,
  enumerable: false,
  configurable: true }
Defining properry
Returning property descriptor for "id"
undefined
Returning "invalid"
      26) should report the line and column when an error occurs in an expression


  48 passing (1s)
  26 failing

  1) levels extend should extend an array:

      AssertionError: expected 2 to equal 3
      + expected - actual

      -2
      +3
      
      at Context.<anonymous> (spec/levels.spec.js:127:34)

  2) levels extend array commands should allow elements to be searched by reference:

      AssertionError: expected 2 to equal 3
      + expected - actual

      -2
      +3
      
      at Context.<anonymous> (spec/levels.spec.js:163:43)

  3) levels extend array commands should allow elements to be searched by property values:
     TypeError: ecman.env is not a function
      at createConfigObject (src/levels.js:251:36)
      at objectExtend (src/levels.js:87:27)
      at processValues (src/levels.js:69:28)
      at applyCommands (src/levels.js:139:31)
      at arrayExtend (src/levels.js:125:32)
      at processValues (src/levels.js:66:28)
      at processKey (src/levels.js:101:38)
      at Array.forEach (native)
      at objectExtend (src/levels.js:88:35)
      at processValues (src/levels.js:69:28)
      at processLevel (src/levels.js:51:20)
      at load (src/levels.js:43:23)
      at Context.<anonymous> (spec/levels.spec.js:177:26)

  4) levels extend array commands should allow elements to be removed:

      AssertionError: expected 2 to equal 3
      + expected - actual

      -2
      +3
      
      at Context.<anonymous> (spec/levels.spec.js:219:43)

  5) levels extend array commands should allow elements to be cleared:

      AssertionError: expected 5 to equal 0
      + expected - actual

      -5
      +0
      
      at Context.<anonymous> (spec/levels.spec.js:254:47)

  6) levels extend array commands should allow elements to be extended:
     TypeError: ecman.env is not a function
      at createConfigObject (src/levels.js:251:36)
      at objectExtend (src/levels.js:87:27)
      at processValues (src/levels.js:69:28)
      at applyCommands (src/levels.js:139:31)
      at arrayExtend (src/levels.js:125:32)
      at processValues (src/levels.js:66:28)
      at processKey (src/levels.js:101:38)
      at Array.forEach (native)
      at objectExtend (src/levels.js:88:35)
      at processValues (src/levels.js:69:28)
      at processLevel (src/levels.js:51:20)
      at load (src/levels.js:43:23)
      at Context.<anonymous> (spec/levels.spec.js:266:26)

  7) levels extend array commands should set the prototypes so that base properties are available:
     TypeError: bcman.env is not a function
      at createConfigObject (src/levels.js:250:36)
      at objectExtend (src/levels.js:87:27)
      at processValues (src/levels.js:69:28)
      at processLevel (src/levels.js:51:20)
      at load (src/levels.js:43:23)
      at Context.<anonymous> (spec/levels.spec.js:281:26)

  8) levels options should make all properties read only when "readOnly" is truthy:
     TypeError: Cannot read property 'hasOwnProperty' of undefined
      at hasProp (src/config-object.js:323:22)
      at Object.set (src/config-object.js:117:33)
      at arrayExtend (src/levels.js:123:33)
      at processValues (src/levels.js:66:28)
      at processKey (src/levels.js:101:38)
      at Array.forEach (native)
      at objectExtend (src/levels.js:88:35)
      at processValues (src/levels.js:69:28)
      at processLevel (src/levels.js:51:20)
      at load (src/levels.js:43:23)
      at Context.<anonymous> (spec/levels.spec.js:303:22)

  9) levels options should make all properties read only when "protectStructure" is truthy:
     TypeError: ecman.env is not a function
      at createConfigObject (src/levels.js:251:36)
      at objectExtend (src/levels.js:87:27)
      at processValues (src/levels.js:69:28)
      at applyCommands (src/levels.js:139:31)
      at arrayExtend (src/levels.js:125:32)
      at processValues (src/levels.js:66:28)
      at processKey (src/levels.js:101:38)
      at Array.forEach (native)
      at objectExtend (src/levels.js:88:35)
      at processValues (src/levels.js:69:28)
      at processLevel (src/levels.js:51:20)
      at load (src/levels.js:43:23)
      at Context.<anonymous> (spec/levels.spec.js:321:22)

  10) loader loading should assign any non string value directly to the config:
     AssertionError: expected undefined to equal {}
      at spec/loader.spec.js:53:43

  11) loader loading should use the parser to parse any string returned by the loader:
     AssertionError: expected undefined to not equal undefined
      at spec/loader.spec.js:69:47

  12) configuration parser checks should not allow calls to functions which are illegal:
     AssertionError: expected [Function: bound parse] to throw an error
      at Context.<anonymous> (spec/parser.spec.js:27:63)

  13) configuration parser root should not create the context value symbol when is is not defined on the parse function:

      AssertionError: expected 7 to equal 1
      + expected - actual

      -7
      +1
      
      at Context.<anonymous> (spec/parser.spec.js:46:65)

  14) configuration parser literals "before each" hook for "should return a string when a string property is defined":
     TypeError: Cannot read property 'on' of undefined
      at addChildChangeEvent (src/config-object.js:332:22)
      at Object.set (src/config-object.js:154:17)
      at assignProp (src/parser.js:334:34)
      at Array.forEach (native)
      at parseObject (src/parser.js:224:19)
      at parse (src/parser.js:120:26)
      at Context.<anonymous> (spec/parser.spec.js:58:22)

  15) configuration parser interpolation should return the value with the variables interpolated into the string:
     AssertionError: expected undefined to equal 'hello cruel world!'
      at Context.<anonymous> (spec/parser.spec.js:90:37)

  16) configuration parser interpolation should return a new value if any of the variables have changed:
     AssertionError: expected undefined to equal 'hello cruel world!'
      at Context.<anonymous> (spec/parser.spec.js:93:37)

  17) configuration parser objects should parse sub objects in the configuration:
     AssertionError: expected undefined to be an object
      at Context.<anonymous> (spec/parser.spec.js:103:35)

  18) configuration parser objects should parse sub arrays in the configuration:
     AssertionError: expected undefined to be an object
      at Context.<anonymous> (spec/parser.spec.js:109:35)

  19) configuration parser expressions should return the value of the expression:
     AssertionError: expected undefined to equal 20
      at Context.<anonymous> (spec/parser.spec.js:123:33)

  20) configuration parser expressions should allow expressions to reference object by their id:
     TypeError: Cannot read property 'exp4' of undefined
      at Context.<anonymous> (spec/parser.spec.js:128:27)

  21) configuration parser expressions should allow configuration values on the current object to be referenced by name:
     AssertionError: expected undefined to equal 30
      at Context.<anonymous> (spec/parser.spec.js:131:33)

  22) configuration parser expressions should allow configuration values on the current object to be through this:
     AssertionError: expected undefined to equal 'foo bar baz'
      at Context.<anonymous> (spec/parser.spec.js:134:33)

  23) configuration parser expressions should use values from options.environment to the parse function in expressions:
     AssertionError: expected undefined to equal 'foo bar baz'
      at Context.<anonymous> (spec/parser.spec.js:137:33)

  24) configuration parser expressions should parse constant expressions to normal values:
     AssertionError: expected undefined to equal 2500
      at Context.<anonymous> (spec/parser.spec.js:153:37)

  25) configuration parser errors should report the line and column of an error when one occurs:
     AssertionError: expected { [Function] baseTest: 1234 } to throw an error
      at Context.<anonymous> (spec/parser.spec.js:178:62)

  26) configuration parser errors should report the line and column when an error occurs in an expression:
     AssertionError: expected { [Function: get] baseTest: 1234 } to throw an error
      at Context.<anonymous> (spec/parser.spec.js:182:33)



Warning: Task "mochaTest:spec" failed. Use --force to continue.

Aborted due to warnings.
